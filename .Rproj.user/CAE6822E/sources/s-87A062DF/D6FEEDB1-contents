#' @title Perform weighted linear regression
#' @description perform weighted linear regression and evaluate by using summed residual
#' @author Yonghui Dong
#' @param DF data frame, it must contain a column named 'Concentration' and a column named 'Ratio'
#' @param weights the weights used in linear regression, default is NULL.
#' @export
#' @examples
#' adduct('C1H4', mode = '-')
#' adduct('C1h4', mode = '+')

doWlm <- function(DF, weights = NULL) {
  #(1) prepare the data
  x <- DF$Concentration
  y <- DF$Ratio
  if(is.null(weights)){
    models <- lm(y ~ x)
  } else {
    models <- lm(y ~ x, weights = eval(parse(text = weights)))
  }

  #(2) residual plot
  myResid <- resid(models)
  dfResid <- cbind.data.frame(Concentration = x, RE = myResid/y * 100)

  ## Hline
  hline <- function(y = 0, color = 'rgba(1, 50, 67, 1)') {
    list(
      width = 2,
      x0 = 0,
      x1 = 1,
      xref = "paper",
      y0 = y,
      y1 = y,
      line = list(color = color)
    )
  }

  pResid <- plotly::plot_ly(dfResid,
                            x = ~ Concentration,
                            y = ~ RE,
                            type = "scatter",
                            mode = "markers") %>%
    plotly::add_markers(marker = list(size = 10,
                                      color = 'rgba(107, 185, 240, 1)',
                                      line = list(color = 'rgba(1, 50, 67, 1)', width = 2))) %>%
    plotly::layout(yaxis = list(title = "% Relative Error"),
                   shapes = list(hline(0)))

  #(3) regression plot

  ## get expression

  a = format(unname(coef(models)[1]), digits = 4)
  b = format(unname(coef(models)[2]), digits = 4)
  r2 = format(summary(models)$r.squared, digits = 4)

  ## get regression plot
  PLinear <- plotly::plot_ly(DF,
                             x = ~Concentration,
                             y = ~Ratio,
                             type = "scatter",
                             mode = "markers") %>%
    plotly::add_markers(marker = list(size = 10,
                                      color = 'rgba(255, 182, 193, .9)',
                                      line = list(color = 'rgba(152, 0, 0, .8)', width = 2))) %>%
    plotly::add_lines(x = ~ Concentration,
                      y = fitted(models),
                      line = list(width = 2, dash = "dot", color = 'rgba(152, 0, 0, .8)')) %>%
    plotly::layout(yaxis = list(title = "Reponse")) %>%
    plotly::add_annotations(x = mean(x) * 0.8, y = max(y) * 0.9,
                            text = paste("y = ", a, " + ", b, "x", " , ", "R<sup>2</sup>", " = ", r2, sep = ""),
                            showarrow = F)

  ## combine the two plots
  figResult <- subplot(PLinear, pResid, nrows = 2, shareX = T, shareY = F,
                       titleX = T, titleY = T) %>%
    layout(showlegend = F,
           title = paste("<b>Residul Plot (blue) and Linear Regression Plot (red) with weights being: </b>", weights, sep = ""))

  #(4) get sum residual
  sumResid <- sum(abs(myResid/y * 100))
  resultList <- list(sumResid = sumResid, figResult = figResult, R2 = r2)
  return(resultList)
}
